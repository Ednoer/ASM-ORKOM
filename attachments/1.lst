     1                                 %line 1+1 1.asm
     2                                 [extern scanf]
     3                                 [extern printf]
     4                                 [extern fflush]
     5                                 
     6                                 [section .data]
     7 00000000 257320257300            fmt1 db "%s %s", 0
     8 00000006 25640A00                fmt2 db "%d", 10, 0
     9                                 
    10                                 [section .bss]
    11 00000000 <gap>                   str1 resd 51
    12 000000CC <gap>                   str2 resd 2
    13                                 
    14                                 [section .text]
    15                                 [global main]
    16                                 
    17                                 main:
    18 00000000 68[00000000]            push str2
    19 00000005 68[00000000]            push str1
    20 0000000A 68[00000000]            push fmt1
    21 0000000F E8(F6FFFFFF)            call scanf
    22                                 
    23 00000014 BA00000000              mov edx, 0
    24 00000019 B932000000              mov ecx, 50
    25                                 
    26 0000001E A0[00000000]            mov al, [str2]
    27 00000023 BF[00000000]            mov edi, str1
    28                                 equal
    29 00000028 F2AE                    repnz scasb
    30 0000002A 741C                    je sama
    31                                 
    32                                 print:
    33 0000002C 52                      push edx
    34 0000002D 68[00000000]            push fmt2
    35 00000032 E8(F6FFFFFF)            call printf
    36                                 
    37                                 exit:
    38 00000037 6A00                    push 0
    39 00000039 E8(F6FFFFFF)            call fflush
    40                                 
    41 0000003E B801000000              mov eax, 1
    42 00000043 BB00000000              mov ebx, 0
    43 00000048 CD80                    int 0x80
    44                                 
    45                                 sama:
    46 0000004A 83C201                  add edx,1
    47 0000004D EBD7                    jmp equal
    48                                 
    49                                 
